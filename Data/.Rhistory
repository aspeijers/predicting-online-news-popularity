training.gbm <- h2o.gbm(y=63, x=5:62, training_frame= training.hex, ntrees=100, max_depth=3, min_rows= 10, learn_rate=0.001, distribution="multinomial")
gbm.perf(prediction, plot.it = TRUE, oobag.curve = FALSE, overlay = TRUE, method="test")
gbm.perf(training.gbm, plot.it = TRUE, oobag.curve = FALSE, overlay = TRUE, method="test")
gbm.perf(trees, plot.it = TRUE, oobag.curve = FALSE, overlay = TRUE, method="test")
gbm.perf(ntrees, plot.it = TRUE, oobag.curve = FALSE, overlay = TRUE, method="test")
set.seed(3719)
n <- 2000
X <- matrix(rnorm(10*n), n, 10)
y <- rep(-1, n)
y[apply(X*X, 1, sum) > qchisq(.5, 10)] <- 1
#  Assign names to the columns of X:
dimnames(X)[[2]] <- c("x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10")
#  Convert to data.frame
train.data <- as.data.frame(X)
#  Add y
train.data$y <- y
#  Now repeat for 10000 test data
n <- 10000
View(train.data)
X <- matrix(rnorm(10*n), n, 10)
y <- rep(-1, n)
y[apply(X*X, 1, sum) > qchisq(.5, 10)] <- 1
dimnames(X)[[2]] <- c("x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10")
test.data <- as.data.frame(X)
test.data$y <- y
#  Need to put training and test data together for gbm below and convert
#  to 0-1 data
train.data2 <- train.data
train.data2$y[train.data2$y < 0] <- 0
test.data2 <- test.data
test.data2$y[test.data2$y < 0] <- 0
all.data2 <- rbind(train.data2, test.data2)
library(rpart)
fit.rp <- rpart(as.factor(y) ~ ., train.data, control=rpart.control(cp=.001))
plot(fit.rp)
#text(fit.rp)
plotcp(fit.rp)
#  CV choice:  somewhere around .005
fit.rp2 <- rpart(as.factor(y) ~ ., train.data, control=(cp=.005))
plot(fit.rp2)
text(fit.rp2)
confusion <- function(a, b){
tbl <- table(a, b)
mis <- 1 - sum(diag(tbl))/sum(tbl)
list(table = tbl, misclass.prob = mis)
}
confusion(predict(fit.rp2, test.data, type="class"), as.factor(test.data$y))
$table
confusion(predict(fit.rp2, test.data, type="class"), as.factor(test.data$y))$table
library(gbm)
fit.gbm1 <- gbm(y ~ ., data=all.data2, dist="adaboost", n.tree = 400,
shrinkage = 1, train.fraction = (2/12))
#  Set to hit return for next plot
par(ask=T)
gbm.perf(fit.gbm1)
confusion(predict(fit.gbm1, test.data2, n.trees = 69) > 0, test.data2$y > 0)$table
$misclass.prob
misclass.prob
confusion(predict(fit.gbm1, test.data2, n.trees = 200) > 0, test.data2$y > 0)
confusion(predict(fit.gbm1, test.data2) > 0, test.data2$y > 0)
library(h2o)
h2o.init(nthreads = -1)
path1 <- "train_result.csv"
path2 <- "test_result.csv"
path3 <- "labels.csv"
training.hex <- h2o.uploadFile(path = path1, destination_frame = "training.hex" )
test.hex <- h2o.uploadFile(path = path2, destination_frame = "test.hex" )
labels.hex <- h2o.uploadFile(path = path3, destination_frame = "labels.hex")
training.hex$popularity <- as.factor(training.hex$popularity)
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=3, min_rows= 10, learn_rate=0.005,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
head(pred)
head(labels.hex)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=5, min_rows= 5, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
head(pred)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=5, min_rows= 25, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=5, min_rows= 12, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=2, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=2, min_rows= 10, learn_rate=0.01,
max_depth=3, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=3, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=4, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=7, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
head(pred)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=250,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=50,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=500,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=230,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=240,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=245,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=265,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=1:35, training_frame= training.hex, ntrees=275,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=265,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=240,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=250,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=230,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=300,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=500,
max_depth=5, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=15, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=3, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=4, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=7, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 5, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 8, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 12, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 20, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 30, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 25, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial")
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 10, learn_rate=0.001,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 0, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 8, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 10, learn_rate=0.005,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 10, learn_rate=0.05,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 10, learn_rate=0.0001,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=280,
max_depth=6, min_rows= 10, learn_rate=0.02,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=285,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=290,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=295,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=290,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
training.gbm <- h2o.gbm(y=36, x=2:35, training_frame= training.hex, ntrees=275,
max_depth=6, min_rows= 10, learn_rate=0.01,
distribution="multinomial", nbins=1024)
training.gbm@model$training_metrics
prediction <- h2o.predict(training.gbm, newdata=test.hex)
pred <- as.data.frame(prediction)
actual <- as.data.frame(labels.hex)[,2]
percent_correct <- sum(pred[,1] == actual) / length(actual)
percent_correct
